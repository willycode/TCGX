package com.kangdainfo.common.model.bo;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * CommonUsergroup generated by hbm2java
 */
@Entity
@Table(name = "COMMON_USERGROUP")
public class CommonUserGroup extends BaseModel implements java.io.Serializable {

	private static final long serialVersionUID = 5234719335357950493L;
	private int id;
	private CommonGroup commonGroup;
	private CommonUser commonUser;

	public CommonUserGroup() {
	}

	public CommonUserGroup(int id, CommonGroup commonGroup,
			CommonUser commonUser) {
		this.id = id;
		this.commonGroup = commonGroup;
		this.commonUser = commonUser;
	}

	public CommonUserGroup(int id, CommonGroup commonGroup,
			CommonUser commonUser, String createId, String createDate,
			String createTime, String updateId, String updateDate,
			String updateTime, String updateIp, String updateUnitShortName) {
		this.id = id;
		this.commonGroup = commonGroup;
		this.commonUser = commonUser;
		this.createId = createId;
		this.createDate = createDate;
		this.createTime = createTime;
		this.updateId = updateId;
		this.updateDate = updateDate;
		this.updateTime = updateTime;
		this.updateIp = updateIp;
		this.updateUnitShortName = updateUnitShortName;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy=GenerationType.AUTO)
	@SequenceGenerator(name="id", sequenceName = "COMMON_USERGROUP_SEQ")		
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "groupId", nullable = false)
	public CommonGroup getCommonGroup() {
		return this.commonGroup;
	}

	public void setCommonGroup(CommonGroup commonGroup) {
		this.commonGroup = commonGroup;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userId", nullable = false)
	public CommonUser getCommonUser() {
		return this.commonUser;
	}

	public void setCommonUser(CommonUser commonUser) {
		this.commonUser = commonUser;
	}

}
