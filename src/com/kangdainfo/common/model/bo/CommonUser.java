package com.kangdainfo.common.model.bo;

import java.util.Date;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

/**
 * CommonUser generated by hbm2java
 */
@Entity
@Table(name = "COMMON_USER", uniqueConstraints = @UniqueConstraint(columnNames = "userId"))
public class CommonUser extends BaseModel implements java.io.Serializable {

	private static final long serialVersionUID = -5138392876941720290L;
	private Integer id;
	private Integer passwordErrorTimes;
	private Date lastPasswordErrorTime;
	private Boolean allowLoginAtCT;
	private CommonDepartment commonDepartment;
	private CommonCode commonCode;
	private CommonGroup commonGroup;
	private String userId;
	private String userSsn;
	private String userPwd;
	private String userName;
	private Integer roleId;
	private String userTel;
	private String userMobile;
	private String userFax;
	private String userEmail;
	private String takeJobDate;
	private String isStop;
	private String isDeptManager;
	private String isAdministrator;
	private String memo;
	private String userPwdModDt;
	private String lastChangePwd;
	private Date userBirthday;
	private Boolean isMaster;						//是否為法師身分
	private Set<CommonUserGroup> commonUsergroups = new HashSet<CommonUserGroup>(0);
	private CommonUserRole commonUserRole;

	public CommonUser() {
	}

	public CommonUser(Integer id, String userId) {
		this.id = id;
		this.userId = userId;
	}

	public CommonUser(String createTime, String createDate, String createId,
			String updateUnitShortName, String updateIp, String updateTime,
			String updateDate, String updateId,
			Boolean allowLoginAtCT, Date lastPasswordErrorTime,
			Integer passwordErrorTimes, int id,
			CommonDepartment commonDepartment, CommonCode commonCode,
			CommonGroup commonGroup, String userId, String userSsn,
			String userPwd, String userName, Integer roleId, String userTel,
			String userMobile, String userFax, String userEmail,
			String takeJobDate, String isStop, String isDeptManager,
			String isAdministrator, String memo, String userPwdModDt,
			Set<CommonUserGroup> commonUsergroups,
			CommonUserRole commonUserRole, Date userBirthday, Boolean isMaster) {
		this.createId = createId;
		this.createDate = createDate;
		this.createTime = createTime;
		this.updateId = updateId;
		this.updateDate = updateDate;
		this.updateTime = updateTime;
		this.updateIp = updateIp;
		this.updateUnitShortName = updateUnitShortName;
		this.id = id;
		this.allowLoginAtCT = allowLoginAtCT;
		this.lastPasswordErrorTime = lastPasswordErrorTime;
		this.passwordErrorTimes = passwordErrorTimes;
		this.commonDepartment = commonDepartment;
		this.commonCode = commonCode;
		this.commonGroup = commonGroup;
		this.userId = userId;
		this.userSsn = userSsn;
		this.userPwd = userPwd;
		this.userName = userName;
		this.roleId = roleId;
		this.userTel = userTel;
		this.userMobile = userMobile;
		this.userFax = userFax;
		this.userEmail = userEmail;
		this.takeJobDate = takeJobDate;
		this.isStop = isStop;
		this.isDeptManager = isDeptManager;
		this.isAdministrator = isAdministrator;
		this.memo = memo;

		this.userPwdModDt = userPwdModDt;
		this.commonUsergroups = commonUsergroups;
		this.commonUserRole = commonUserRole;
		this.userBirthday = userBirthday;
		this.isMaster = isMaster;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.AUTO)
	@SequenceGenerator(name = "id", sequenceName = "COMMON_USER_SEQ")
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "deptId")
	public CommonDepartment getCommonDepartment() {
		return this.commonDepartment;
	}

	public void setCommonDepartment(CommonDepartment commonDepartment) {
		this.commonDepartment = commonDepartment;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userTitle")
	public CommonCode getCommonCode() {
		return this.commonCode;
	}

	public void setCommonCode(CommonCode commonCode) {
		this.commonCode = commonCode;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "groupId")
	public CommonGroup getCommonGroup() {
		return this.commonGroup;
	}

	public void setCommonGroup(CommonGroup commonGroup) {
		this.commonGroup = commonGroup;
	}

	@Column(name = "userId", unique = true, nullable = false, length = 50)
	public String getUserId() {
		return this.userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	@Column(name = "userSSN", length = 20)
	public String getUserSsn() {
		return this.userSsn;
	}

	public void setUserSsn(String userSsn) {
		this.userSsn = userSsn;
	}

	@Column(name = "userPWD", length = 100)
	public String getUserPwd() {
		return this.userPwd;
	}

	public void setUserPwd(String userPwd) {
		this.userPwd = userPwd;
	}

	@Column(name = "userName", length = 50)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "userBirthday")
	public Date getUserBirthday() {
		return this.userBirthday;
	}

	public void setUserBirthday(Date userBirthday) {
		this.userBirthday = userBirthday;
	}

	@Column(name = "roleId")
	public Integer getRoleId() {
		return this.roleId;
	}

	public void setRoleId(Integer roleId) {
		this.roleId = roleId;
	}

	@Column(name = "userTel", length = 50)
	public String getUserTel() {
		return this.userTel;
	}

	public void setUserTel(String userTel) {
		this.userTel = userTel;
	}

	@Column(name = "userMobile", length = 50)
	public String getUserMobile() {
		return this.userMobile;
	}

	public void setUserMobile(String userMobile) {
		this.userMobile = userMobile;
	}

	@Column(name = "userFax", length = 50)
	public String getUserFax() {
		return this.userFax;
	}

	public void setUserFax(String userFax) {
		this.userFax = userFax;
	}

	@Column(name = "userEmail", length = 250)
	public String getUserEmail() {
		return this.userEmail;
	}

	public void setUserEmail(String userEmail) {
		this.userEmail = userEmail;
	}

	@Column(name = "takeJobDate", length = 7)
	public String getTakeJobDate() {
		return this.takeJobDate;
	}

	public void setTakeJobDate(String takeJobDate) {
		this.takeJobDate = takeJobDate;
	}

	@Column(name = "isStop", length = 1)
	public String getIsStop() {
		return this.isStop;
	}

	public void setIsStop(String isStop) {
		this.isStop = isStop;
	}

	@Column(name = "isDeptManager", length = 1)
	public String getIsDeptManager() {
		return this.isDeptManager;
	}

	public void setIsDeptManager(String isDeptManager) {
		this.isDeptManager = isDeptManager;
	}

	@Column(name = "isAdministrator", length = 1)
	public String getIsAdministrator() {
		return this.isAdministrator;
	}

	public void setIsAdministrator(String isAdministrator) {
		this.isAdministrator = isAdministrator;
	}

	@Column(name = "memo", length = 500)
	public String getMemo() {
		return this.memo;
	}

	public void setMemo(String memo) {
		this.memo = memo;
	}

	@Column(name = "userPwdModDt", length = 20)
	public String getUserPwdModDt() {
		return this.userPwdModDt;
	}

	public void setUserPwdModDt(String userPwdModDt) {
		this.userPwdModDt = userPwdModDt;
	}

	@Column(name = "passwordErrorTimes")
	public Integer getPasswordErrorTimes() {
		return passwordErrorTimes;
	}

	public void setPasswordErrorTimes(Integer passwordErrorTimes) {
		this.passwordErrorTimes = passwordErrorTimes;
	}

	@Column(name = "lastPasswordErrorTime")
	public Date getLastPasswordErrorTime() {
		return lastPasswordErrorTime;
	}

	public void setLastPasswordErrorTime(Date lastPasswordErrorTime) {
		this.lastPasswordErrorTime = lastPasswordErrorTime;
	}

	@Column(name = "allowLoginAtCT")
	public Boolean getAllowLoginAtCT() {
		return allowLoginAtCT;
	}

	public void setAllowLoginAtCT(Boolean allowLoginAtCT) {
		this.allowLoginAtCT = allowLoginAtCT;
	}

	@Column(name = "isMaster")
	public Boolean getIsMaster() {
		return this.isMaster;
	}

	public void setIsMaster(Boolean isMaster) {
		this.isMaster = isMaster;
	}
	@Column(name = "lastChangePwd", length = 8)
	public String getLastChangePwd() {
		return lastChangePwd;
	}

	public void setLastChangePwd(String lastChangePwd) {
		this.lastChangePwd = lastChangePwd;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commonUser")
	public Set<CommonUserGroup> getCommonUsergroups() {
		return this.commonUsergroups;
	}

	public void setCommonUsergroups(Set<CommonUserGroup> commonUsergroups) {
		this.commonUsergroups = commonUsergroups;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "commonUser")
	public CommonUserRole getCommonUserRole() {
		return this.commonUserRole;
	}

	public void setCommonUserRole(CommonUserRole commonUserRole) {
		this.commonUserRole = commonUserRole;
	}

	private String userIP, lastLoginDate, lastLoginTime, lastLoginIP; // 不存在於資料庫,只是為了使用者登入時暫存用的
	private String sessionId, loginDate, loginTime; // 不存在於資料庫,只是為了使用者登入時暫存用的
	private java.util.Map<String, Object[]> permissionMap; // 不存在於資料庫,只是為了使用者登入時暫存用的

	/**
	 * 不存在於資料庫,只是為了使用者登入時暫存一下使用者的IP
	 * 
	 * @return
	 */
	@Transient
	public String getUserIP() {
		return userIP;
	}

	/**
	 * 不存在於資料庫,只是為了使用者登入時暫存一下使用者的IP
	 * 
	 * @param userIP
	 */
	public void setUserIP(String userIP) {
		this.userIP = userIP;
	}

	/**
	 * 不存在於資料庫,只是為了使用者登入時暫存一下的使用者前次登入日期
	 * 
	 * @return
	 */
	@Transient
	public String getLastLoginDate() {
		return lastLoginDate;
	}

	public void setLastLoginDate(String lastLoginDate) {
		this.lastLoginDate = lastLoginDate;
	}

	/**
	 * 不存在於資料庫,只是為了使用者登入時暫存一下的使用者前次登入時間
	 * 
	 * @return
	 */
	@Transient
	public String getLastLoginTime() {
		return lastLoginTime;
	}

	public void setLastLoginTime(String lastLoginTime) {
		this.lastLoginTime = lastLoginTime;
	}

	/**
	 * 不存在於資料庫,只是為了使用者登入時暫存一下的使用者前次登入IP
	 * 
	 * @return
	 */
	@Transient
	public String getLastLoginIP() {
		return lastLoginIP;
	}

	public void setLastLoginIP(String lastLoginIP) {
		this.lastLoginIP = lastLoginIP;
	}

	@Transient
	public String getSessionId() {
		return sessionId;
	}

	public void setSessionId(String sessionId) {
		this.sessionId = sessionId;
	}

	@Transient
	public String getLoginDate() {
		return loginDate;
	}

	public void setLoginDate(String loginDate) {
		this.loginDate = loginDate;
	}

	@Transient
	public String getLoginTime() {
		return loginTime;
	}

	public void setLoginTime(String loginTime) {
		this.loginTime = loginTime;
	}

	/**
	 * key = 功能代號<br>
	 * obj[0] = 權限 - int 型態<br>
	 * obj[1] = 功能選單物件 - CommonDtree<br>
	 */
	@Transient
	public java.util.Map<String, Object[]> getPermissionMap() {
		return permissionMap;
	}

	/**
	 * key = 功能代號<br>
	 * obj[0] = 權限 - int 型態<br>
	 * obj[1] = 功能選單物件 - CommonDtree<br>
	 */
	public void setPermissionMap(java.util.Map<String, Object[]> permissionMap) {
		this.permissionMap = permissionMap;
	}

	private CommonAuth[] commonAuth; // 不存在於資料庫,只是為了使用者登入時暫存用的

	@Transient
	public CommonAuth[] getCommonAuth() {
		return commonAuth;
	}

	public void setCommonAuth(CommonAuth[] commonAuth) {
		this.commonAuth = commonAuth;
	}

}
