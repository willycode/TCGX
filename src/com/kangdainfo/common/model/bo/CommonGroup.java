package com.kangdainfo.common.model.bo;


import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * CommonGroup generated by hbm2java
 */
@Entity
@Table(name = "COMMON_GROUP")
public class CommonGroup extends BaseModel implements java.io.Serializable {

	private static final long serialVersionUID = -2097451780959833127L;
	
	public interface FieldNames {
		String id = "id";
		String groupName = "groupName";
		String groupDesc = "groupDesc";
		String editId = "editId";
		String editDate = "editDate";
		String editTime = "editTime";
		String commonUsers = "commonUsers";
		String commonAuths = "commonAuths";
	}	
	
	private Integer id;
	private String groupName;
	private String groupDesc;
	private Boolean forBranch;
	private Boolean topManager;
	private Boolean unlimitUse;
	
	
	
	
	private Set<CommonUserRole> commonUserRoles = new HashSet<CommonUserRole>(0);
	private Set<CommonUser> commonUsers = new HashSet<CommonUser>(0);
	private Set<CommonAuth> commonAuths = new HashSet<CommonAuth>(0);
	private Set<CommonUserGroup> commonUsergroups = new HashSet<CommonUserGroup>(0);

	public CommonGroup() {
	}

	public CommonGroup(Integer id, String groupName) {
		this.id = id;
		this.groupName = groupName;
	}

	public CommonGroup(Boolean unlimitUse,Boolean topManager,Boolean forBranch,String createTime,String createDate,String createId,int id, String groupName, String groupDesc,
			String updateUnitShortName,String updateIp,String updateTime,String updateDate,String updateId,
			Set<CommonUserRole> commonUserRoles, Set<CommonUser> commonUsers,
			Set<CommonAuth> commonAuths, Set<CommonUserGroup> commonUsergroups) {
		this.forBranch=forBranch;
		this.unlimitUse=unlimitUse;
		this.topManager=topManager;
		
		
		this.id = id;
		this.groupName = groupName;
		this.groupDesc = groupDesc;
		
		this.commonUserRoles = commonUserRoles;
		this.commonUsers = commonUsers;
		this.commonAuths = commonAuths;
		this.commonUsergroups = commonUsergroups;
		this.updateId=updateId;
		this.updateDate=updateDate;
		this.updateTime=updateTime;
		this.updateIp=updateIp;
		this.updateUnitShortName=updateUnitShortName;
		this.createId=createId;
		this.createDate=createDate;
		this.createTime=createTime;
	}

	@Id
	@Column(name = "Id", unique = true, nullable = false)
	@GeneratedValue(strategy=GenerationType.AUTO)
	@SequenceGenerator(name="id", sequenceName = "COMMON_GROUP_SEQ")
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "forBranch")
	public Boolean getForBranch() {
		return forBranch;
	}

	public void setForBranch(Boolean forBranch) {
		this.forBranch = forBranch;
	}
	@Column(name = "topManager")
	public Boolean getTopManager() {
		return topManager;
	}

	public void setTopManager(Boolean topManager) {
		this.topManager = topManager;
	}
	@Column(name = "unlimitUse")
	public Boolean getUnlimitUse() {
		return unlimitUse;
	}

	public void setUnlimitUse(Boolean unlimitUse) {
		this.unlimitUse = unlimitUse;
	}

	@Column(name = "groupName", nullable = false, length = 100)
	public String getGroupName() {
		return this.groupName;
	}

	public void setGroupName(String groupName) {
		this.groupName = groupName;
	}

	@Column(name = "groupDesc", length = 500)
	public String getGroupDesc() {
		return this.groupDesc;
	}

	public void setGroupDesc(String groupDesc) {
		this.groupDesc = groupDesc;
	}

	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commonGroup")
	public Set<CommonUserRole> getCommonUserRoles() {
		return this.commonUserRoles;
	}

	public void setCommonUserRoles(Set<CommonUserRole> commonUserRoles) {
		this.commonUserRoles = commonUserRoles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commonGroup")
	public Set<CommonUser> getCommonUsers() {
		return this.commonUsers;
	}

	public void setCommonUsers(Set<CommonUser> commonUsers) {
		this.commonUsers = commonUsers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commonGroup", cascade = CascadeType.ALL)
	public Set<CommonAuth> getCommonAuths() {
		return this.commonAuths;
	}

	public void setCommonAuths(Set<CommonAuth> commonAuths) {
		this.commonAuths = commonAuths;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commonGroup")
	public Set<CommonUserGroup> getCommonUsergroups() {
		return this.commonUsergroups;
	}

	public void setCommonUsergroups(Set<CommonUserGroup> commonUsergroups) {
		this.commonUsergroups = commonUsergroups;
	}

}
